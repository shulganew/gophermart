// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/maintenance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	uuid "github.com/gofrs/uuid"
	gomock "github.com/golang/mock/gomock"
	model "github.com/shulganew/gophermart/internal/model"
)

// MockMaintenancerer is a mock of Maintenancerer interface.
type MockMaintenancerer struct {
	ctrl     *gomock.Controller
	recorder *MockMaintenancererMockRecorder
}

// MockMaintenancererMockRecorder is the mock recorder for MockMaintenancerer.
type MockMaintenancererMockRecorder struct {
	mock *MockMaintenancerer
}

// NewMockMaintenancerer creates a new mock instance.
func NewMockMaintenancerer(ctrl *gomock.Controller) *MockMaintenancerer {
	mock := &MockMaintenancerer{ctrl: ctrl}
	mock.recorder = &MockMaintenancererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMaintenancerer) EXPECT() *MockMaintenancererMockRecorder {
	return m.recorder
}

// AddUser mocks base method.
func (m *MockMaintenancerer) AddUser(ctx context.Context, login, hash string) (*uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUser", ctx, login, hash)
	ret0, _ := ret[0].(*uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUser indicates an expected call of AddUser.
func (mr *MockMaintenancererMockRecorder) AddUser(ctx, login, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUser", reflect.TypeOf((*MockMaintenancerer)(nil).AddUser), ctx, login, hash)
}

// GetByLogin mocks base method.
func (m *MockMaintenancerer) GetByLogin(ctx context.Context, login string) (*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByLogin", ctx, login)
	ret0, _ := ret[0].(*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByLogin indicates an expected call of GetByLogin.
func (mr *MockMaintenancererMockRecorder) GetByLogin(ctx, login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByLogin", reflect.TypeOf((*MockMaintenancerer)(nil).GetByLogin), ctx, login)
}
